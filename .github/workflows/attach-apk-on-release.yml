name: Attach APK to Release

on:
  release:
    types: [published, prereleased]             # run for both releases and pre-releases
  workflow_dispatch:                            # manual fallback to attach to an existing tag
    inputs:
      tag:
        description: "Tag to attach APK to (e.g., v0.2.0-beta.0)"
        required: true

permissions:
  contents: write

jobs:
  build-and-upload-apk:
    runs-on: windows-latest
    env:
      MAUI_PROJECT: ParkSpotTLV.App/ParkSpotTLV.App.csproj
      CONFIGURATION: Release
      TAG_NAME: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.release.tag_name }}

    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG_NAME }}
          fetch-depth: 0

      - name: Setup .NET SDK 9.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install MAUI/Android workloads
        shell: pwsh
        run: |
          dotnet --info
          dotnet workload install maui-android android
          dotnet workload list

      - name: Restore
        shell: pwsh
        run: dotnet restore

      - name: Publish APK
        shell: pwsh
        run: >
          dotnet publish $env:MAUI_PROJECT
          -c $env:CONFIGURATION
          -f net9.0-android
          /p:AndroidPackageFormat=apk
          /p:AndroidPackageFileName=ParkSpotTLV.apk

      - name: Find APK path
        id: findapk
        shell: pwsh
        run: |
          $apk = Get-ChildItem -Recurse -Path . -Filter *.apk | Select-Object -First 1
          if (-not $apk) { Write-Error "No APK found."; exit 1 }
          echo "apk=$($apk.FullName)" >> $env:GITHUB_OUTPUT

      - name: Upload APK to the Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.findapk.outputs.apk }}
          tag_name: ${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
